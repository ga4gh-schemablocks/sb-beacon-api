"$schema": http://json-schema.org/draft-07/schema#
"$id": https://schemablocks.org/schemas/beacon/BeaconSnvRequest/v1.1.0
title: BeaconSnvRequest
meta:
  contributors:
    - description: "Michael Baudis"
      id: "orcid:0000-0002-9903-4248"
    - description: "Beacon developers..."
  provenance:
    - description: 'Beacon API'
      id: 'https://github.com/ga4gh-beacon/specification/'
  used_by:
    - description: "Beacon"
      id: 'https://github.com/ga4gh-beacon/specification/blob/master/beacon.yaml'
    - description: "Progenetix database schema (Beacon+ backend)"
      id: 'https://github.com/progenetix/schemas/tree/master/main/yaml'
  sb_status: proposed
description: The precise SNV query subtype of the `BeaconAlleleRequest`.
type: object
required:
  - referenceName
  - referenceBases
  - alternateBases
  - start
  - assemblyId
properties:
  referenceName:
    allof:
      - "$ref": https://schemablocks.org/schemas/beacon/v1.1.0/Chromosome.json
      - description: |
          Chromosome as string
        examples:
          - "22"
          - "Y"
  start:
    description: |
      Precise start coordinate position, allele locus (0-based, inclusive).
      For the _precise_ `BeaconSnvRequest`, only the `start` parameter is being
      used.
    type: integer
    format: int64
    minimum: 0
    examples:
      - 0
      - 6298005
  referenceBases:
    description: |
     Reference bases for this variant (starting from `start`).
     Accepted values: [ACGTN]*. N is a wildcard, that denotes the position of 
     any base, and can be used as a standalone base of any type or within a 
     partially known sequence. For example a sequence where the first and 
     last bases are known, but the middle portion can exhibit countless 
     variations of [ACGT], or the bases are unknown: ANNT the Ns can take 
     take any form of [ACGT], which makes both ACCT and ATGT (or any other 
     combination) viable sequences.
    type: string
    pattern: '^([ACGTN]+)$'
  alternateBases:
    description: |
      The bases that appear instead of the reference bases, as described for 
      `referenceBases`.

      Symbolic ALT alleles (DEL, INS, DUP, INV, CNV, DUP:TANDEM, DEL:ME,
      INS:ME) cannot be represented in `alternateBases`.
    type: string
    pattern: '^([ACGTN]+)$'
  assemblyId:
    description: 'Assembly identifier (GRC notation, e.g. `GRCh37`).'
    type: string
    examples:
      - GRCh38
  datasetIds:
    description: |
      Identifiers of datasets, as defined in `BeaconDataset`. If this
      field is null/not specified, all datasets should be queried.
    type: array
    items: string
    examples:
      - - arraymap
        - TCGA
  includeDatasetResponses:
    description: |
      Indicator of whether responses for individual datasets
      (datasetAlleleResponses) should be included in the response
      (BeaconAlleleResponse) to this request or not. If null (not
      specified), the default value of NONE is assumed.
    type: string
    enum:
     - ALL
     - HIT
     - MISS
     - NONE
examples:
  - datasetIds: ["dipg", "progenetix"]
    includeDatasetResponses: "HIT"
    assemblyId: "GRCh38"
    referenceName: 17
    start: 7577121
    alternateBases: "A"
    referenceBases: "G"
